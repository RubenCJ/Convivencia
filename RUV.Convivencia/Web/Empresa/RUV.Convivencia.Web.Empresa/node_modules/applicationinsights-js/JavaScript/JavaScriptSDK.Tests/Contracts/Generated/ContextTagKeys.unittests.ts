// THIS FILE WAS AUTOGENERATED
/// <reference path="../../External/qunit.d.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/ContextTagKeys.ts" />
QUnit.test("Test property ContextTagKeys.ApplicationVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.applicationVersion !== null, "ContextTagKeys.applicationVersion == null");
    QUnit.ok(temp.applicationVersion === "ai.application.ver", "Issue with ContextTagKeys.applicationVersion");
});

QUnit.test("Test property ContextTagKeys.ApplicationBuild was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.applicationBuild !== null, "ContextTagKeys.applicationBuild == null");
    QUnit.ok(temp.applicationBuild === "ai.application.build", "Issue with ContextTagKeys.applicationBuild");
});

QUnit.test("Test property ContextTagKeys.ApplicationTypeId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.applicationTypeId !== null, "ContextTagKeys.applicationTypeId == null");
    QUnit.ok(temp.applicationTypeId === "ai.application.typeId", "Issue with ContextTagKeys.applicationTypeId");
});

QUnit.test("Test property ContextTagKeys.ApplicationId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.applicationId !== null, "ContextTagKeys.applicationId == null");
    QUnit.ok(temp.applicationId === "ai.application.applicationId", "Issue with ContextTagKeys.applicationId");
});

QUnit.test("Test property ContextTagKeys.DeviceId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceId !== null, "ContextTagKeys.deviceId == null");
    QUnit.ok(temp.deviceId === "ai.device.id", "Issue with ContextTagKeys.deviceId");
});

QUnit.test("Test property ContextTagKeys.DeviceIp was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceIp !== null, "ContextTagKeys.deviceIp == null");
    QUnit.ok(temp.deviceIp === "ai.device.ip", "Issue with ContextTagKeys.deviceIp");
});

QUnit.test("Test property ContextTagKeys.DeviceLanguage was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceLanguage !== null, "ContextTagKeys.deviceLanguage == null");
    QUnit.ok(temp.deviceLanguage === "ai.device.language", "Issue with ContextTagKeys.deviceLanguage");
});

QUnit.test("Test property ContextTagKeys.DeviceLocale was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceLocale !== null, "ContextTagKeys.deviceLocale == null");
    QUnit.ok(temp.deviceLocale === "ai.device.locale", "Issue with ContextTagKeys.deviceLocale");
});

QUnit.test("Test property ContextTagKeys.DeviceModel was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceModel !== null, "ContextTagKeys.deviceModel == null");
    QUnit.ok(temp.deviceModel === "ai.device.model", "Issue with ContextTagKeys.deviceModel");
});

QUnit.test("Test property ContextTagKeys.DeviceNetwork was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceNetwork !== null, "ContextTagKeys.deviceNetwork == null");
    QUnit.ok(temp.deviceNetwork === "ai.device.network", "Issue with ContextTagKeys.deviceNetwork");
});

QUnit.test("Test property ContextTagKeys.DeviceNetworkName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceNetworkName !== null, "ContextTagKeys.deviceNetworkName == null");
    QUnit.ok(temp.deviceNetworkName === "ai.device.networkName", "Issue with ContextTagKeys.deviceNetworkName");
});

QUnit.test("Test property ContextTagKeys.DeviceOEMName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOEMName !== null, "ContextTagKeys.deviceOEMName == null");
    QUnit.ok(temp.deviceOEMName === "ai.device.oemName", "Issue with ContextTagKeys.deviceOEMName");
});

QUnit.test("Test property ContextTagKeys.DeviceOS was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOS !== null, "ContextTagKeys.deviceOS == null");
    QUnit.ok(temp.deviceOS === "ai.device.os", "Issue with ContextTagKeys.deviceOS");
});

QUnit.test("Test property ContextTagKeys.DeviceOSVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOSVersion !== null, "ContextTagKeys.deviceOSVersion == null");
    QUnit.ok(temp.deviceOSVersion === "ai.device.osVersion", "Issue with ContextTagKeys.deviceOSVersion");
});

QUnit.test("Test property ContextTagKeys.DeviceRoleInstance was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceRoleInstance !== null, "ContextTagKeys.deviceRoleInstance == null");
    QUnit.ok(temp.deviceRoleInstance === "ai.device.roleInstance", "Issue with ContextTagKeys.deviceRoleInstance");
});

QUnit.test("Test property ContextTagKeys.DeviceRoleName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceRoleName !== null, "ContextTagKeys.deviceRoleName == null");
    QUnit.ok(temp.deviceRoleName === "ai.device.roleName", "Issue with ContextTagKeys.deviceRoleName");
});

QUnit.test("Test property ContextTagKeys.DeviceScreenResolution was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceScreenResolution !== null, "ContextTagKeys.deviceScreenResolution == null");
    QUnit.ok(temp.deviceScreenResolution === "ai.device.screenResolution", "Issue with ContextTagKeys.deviceScreenResolution");
});

QUnit.test("Test property ContextTagKeys.DeviceType was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceType !== null, "ContextTagKeys.deviceType == null");
    QUnit.ok(temp.deviceType === "ai.device.type", "Issue with ContextTagKeys.deviceType");
});

QUnit.test("Test property ContextTagKeys.DeviceMachineName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceMachineName !== null, "ContextTagKeys.deviceMachineName == null");
    QUnit.ok(temp.deviceMachineName === "ai.device.machineName", "Issue with ContextTagKeys.deviceMachineName");
});

QUnit.test("Test property ContextTagKeys.DeviceVMName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceVMName !== null, "ContextTagKeys.deviceVMName == null");
    QUnit.ok(temp.deviceVMName === "ai.device.vmName", "Issue with ContextTagKeys.deviceVMName");
});

QUnit.test("Test property ContextTagKeys.LocationIp was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.locationIp !== null, "ContextTagKeys.locationIp == null");
    QUnit.ok(temp.locationIp === "ai.location.ip", "Issue with ContextTagKeys.locationIp");
});

QUnit.test("Test property ContextTagKeys.OperationId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationId !== null, "ContextTagKeys.operationId == null");
    QUnit.ok(temp.operationId === "ai.operation.id", "Issue with ContextTagKeys.operationId");
});

QUnit.test("Test property ContextTagKeys.OperationName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationName !== null, "ContextTagKeys.operationName == null");
    QUnit.ok(temp.operationName === "ai.operation.name", "Issue with ContextTagKeys.operationName");
});

QUnit.test("Test property ContextTagKeys.OperationParentId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationParentId !== null, "ContextTagKeys.operationParentId == null");
    QUnit.ok(temp.operationParentId === "ai.operation.parentId", "Issue with ContextTagKeys.operationParentId");
});

QUnit.test("Test property ContextTagKeys.OperationRootId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationRootId !== null, "ContextTagKeys.operationRootId == null");
    QUnit.ok(temp.operationRootId === "ai.operation.rootId", "Issue with ContextTagKeys.operationRootId");
});

QUnit.test("Test property ContextTagKeys.OperationSyntheticSource was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationSyntheticSource !== null, "ContextTagKeys.operationSyntheticSource == null");
    QUnit.ok(temp.operationSyntheticSource === "ai.operation.syntheticSource", "Issue with ContextTagKeys.operationSyntheticSource");
});

QUnit.test("Test property ContextTagKeys.OperationIsSynthetic was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationIsSynthetic !== null, "ContextTagKeys.operationIsSynthetic == null");
    QUnit.ok(temp.operationIsSynthetic === "ai.operation.isSynthetic", "Issue with ContextTagKeys.operationIsSynthetic");
});

QUnit.test("Test property ContextTagKeys.OperationCorrelationVector was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationCorrelationVector !== null, "ContextTagKeys.operationCorrelationVector == null");
    QUnit.ok(temp.operationCorrelationVector === "ai.operation.correlationVector", "Issue with ContextTagKeys.operationCorrelationVector");
});

QUnit.test("Test property ContextTagKeys.SessionId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionId !== null, "ContextTagKeys.sessionId == null");
    QUnit.ok(temp.sessionId === "ai.session.id", "Issue with ContextTagKeys.sessionId");
});

QUnit.test("Test property ContextTagKeys.SessionIsFirst was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionIsFirst !== null, "ContextTagKeys.sessionIsFirst == null");
    QUnit.ok(temp.sessionIsFirst === "ai.session.isFirst", "Issue with ContextTagKeys.sessionIsFirst");
});

QUnit.test("Test property ContextTagKeys.SessionIsNew was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionIsNew !== null, "ContextTagKeys.sessionIsNew == null");
    QUnit.ok(temp.sessionIsNew === "ai.session.isNew", "Issue with ContextTagKeys.sessionIsNew");
});

QUnit.test("Test property ContextTagKeys.UserAccountAcquisitionDate was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAccountAcquisitionDate !== null, "ContextTagKeys.userAccountAcquisitionDate == null");
    QUnit.ok(temp.userAccountAcquisitionDate === "ai.user.accountAcquisitionDate", "Issue with ContextTagKeys.userAccountAcquisitionDate");
});

QUnit.test("Test property ContextTagKeys.UserAccountId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAccountId !== null, "ContextTagKeys.userAccountId == null");
    QUnit.ok(temp.userAccountId === "ai.user.accountId", "Issue with ContextTagKeys.userAccountId");
});

QUnit.test("Test property ContextTagKeys.UserAgent was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAgent !== null, "ContextTagKeys.userAgent == null");
    QUnit.ok(temp.userAgent === "ai.user.userAgent", "Issue with ContextTagKeys.userAgent");
});

QUnit.test("Test property ContextTagKeys.UserId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userId !== null, "ContextTagKeys.userId == null");
    QUnit.ok(temp.userId === "ai.user.id", "Issue with ContextTagKeys.userId");
});

QUnit.test("Test property ContextTagKeys.UserStoreRegion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userStoreRegion !== null, "ContextTagKeys.userStoreRegion == null");
    QUnit.ok(temp.userStoreRegion === "ai.user.storeRegion", "Issue with ContextTagKeys.userStoreRegion");
});

QUnit.test("Test property ContextTagKeys.UserAuthUserId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAuthUserId !== null, "ContextTagKeys.userAuthUserId == null");
    QUnit.ok(temp.userAuthUserId === "ai.user.authUserId", "Issue with ContextTagKeys.userAuthUserId");
});

QUnit.test("Test property ContextTagKeys.UserAnonymousUserAcquisitionDate was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAnonymousUserAcquisitionDate !== null, "ContextTagKeys.userAnonymousUserAcquisitionDate == null");
    QUnit.ok(temp.userAnonymousUserAcquisitionDate === "ai.user.anonUserAcquisitionDate", "Issue with ContextTagKeys.userAnonymousUserAcquisitionDate");
});

QUnit.test("Test property ContextTagKeys.UserAuthenticatedUserAcquisitionDate was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAuthenticatedUserAcquisitionDate !== null, "ContextTagKeys.userAuthenticatedUserAcquisitionDate == null");
    QUnit.ok(temp.userAuthenticatedUserAcquisitionDate === "ai.user.authUserAcquisitionDate", "Issue with ContextTagKeys.userAuthenticatedUserAcquisitionDate");
});

QUnit.test("Test property ContextTagKeys.SampleRate was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sampleRate !== null, "ContextTagKeys.sampleRate == null");
    QUnit.ok(temp.sampleRate === "ai.sample.sampleRate", "Issue with ContextTagKeys.sampleRate");
});

QUnit.test("Test property ContextTagKeys.CloudName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.cloudName !== null, "ContextTagKeys.cloudName == null");
    QUnit.ok(temp.cloudName === "ai.cloud.name", "Issue with ContextTagKeys.cloudName");
});

QUnit.test("Test property ContextTagKeys.CloudRoleVer was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.cloudRoleVer !== null, "ContextTagKeys.cloudRoleVer == null");
    QUnit.ok(temp.cloudRoleVer === "ai.cloud.roleVer", "Issue with ContextTagKeys.cloudRoleVer");
});

QUnit.test("Test property ContextTagKeys.CloudEnvironment was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.cloudEnvironment !== null, "ContextTagKeys.cloudEnvironment == null");
    QUnit.ok(temp.cloudEnvironment === "ai.cloud.environment", "Issue with ContextTagKeys.cloudEnvironment");
});

QUnit.test("Test property ContextTagKeys.CloudLocation was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.cloudLocation !== null, "ContextTagKeys.cloudLocation == null");
    QUnit.ok(temp.cloudLocation === "ai.cloud.location", "Issue with ContextTagKeys.cloudLocation");
});

QUnit.test("Test property ContextTagKeys.CloudDeploymentUnit was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.cloudDeploymentUnit !== null, "ContextTagKeys.cloudDeploymentUnit == null");
    QUnit.ok(temp.cloudDeploymentUnit === "ai.cloud.deploymentUnit", "Issue with ContextTagKeys.cloudDeploymentUnit");
});

QUnit.test("Test property ContextTagKeys.ServerDeviceOS was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.serverDeviceOS !== null, "ContextTagKeys.serverDeviceOS == null");
    QUnit.ok(temp.serverDeviceOS === "ai.serverDevice.os", "Issue with ContextTagKeys.serverDeviceOS");
});

QUnit.test("Test property ContextTagKeys.ServerDeviceOSVer was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.serverDeviceOSVer !== null, "ContextTagKeys.serverDeviceOSVer == null");
    QUnit.ok(temp.serverDeviceOSVer === "ai.serverDevice.osVer", "Issue with ContextTagKeys.serverDeviceOSVer");
});

QUnit.test("Test property ContextTagKeys.InternalSdkVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalSdkVersion !== null, "ContextTagKeys.internalSdkVersion == null");
    QUnit.ok(temp.internalSdkVersion === "ai.internal.sdkVersion", "Issue with ContextTagKeys.internalSdkVersion");
});

QUnit.test("Test property ContextTagKeys.InternalAgentVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalAgentVersion !== null, "ContextTagKeys.internalAgentVersion == null");
    QUnit.ok(temp.internalAgentVersion === "ai.internal.agentVersion", "Issue with ContextTagKeys.internalAgentVersion");
});

QUnit.test("Test property ContextTagKeys.InternalDataCollectorReceivedTime was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalDataCollectorReceivedTime !== null, "ContextTagKeys.internalDataCollectorReceivedTime == null");
    QUnit.ok(temp.internalDataCollectorReceivedTime === "ai.internal.dataCollectorReceivedTime", "Issue with ContextTagKeys.internalDataCollectorReceivedTime");
});

QUnit.test("Test property ContextTagKeys.InternalProfileId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalProfileId !== null, "ContextTagKeys.internalProfileId == null");
    QUnit.ok(temp.internalProfileId === "ai.internal.profileId", "Issue with ContextTagKeys.internalProfileId");
});

QUnit.test("Test property ContextTagKeys.InternalProfileClassId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalProfileClassId !== null, "ContextTagKeys.internalProfileClassId == null");
    QUnit.ok(temp.internalProfileClassId === "ai.internal.profileClassId", "Issue with ContextTagKeys.internalProfileClassId");
});

QUnit.test("Test property ContextTagKeys.InternalAccountId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalAccountId !== null, "ContextTagKeys.internalAccountId == null");
    QUnit.ok(temp.internalAccountId === "ai.internal.accountId", "Issue with ContextTagKeys.internalAccountId");
});

QUnit.test("Test property ContextTagKeys.InternalApplicationName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalApplicationName !== null, "ContextTagKeys.internalApplicationName == null");
    QUnit.ok(temp.internalApplicationName === "ai.internal.applicationName", "Issue with ContextTagKeys.internalApplicationName");
});

QUnit.test("Test property ContextTagKeys.InternalInstrumentationKey was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalInstrumentationKey !== null, "ContextTagKeys.internalInstrumentationKey == null");
    QUnit.ok(temp.internalInstrumentationKey === "ai.internal.instrumentationKey", "Issue with ContextTagKeys.internalInstrumentationKey");
});

QUnit.test("Test property ContextTagKeys.InternalTelemetryItemId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalTelemetryItemId !== null, "ContextTagKeys.internalTelemetryItemId == null");
    QUnit.ok(temp.internalTelemetryItemId === "ai.internal.telemetryItemId", "Issue with ContextTagKeys.internalTelemetryItemId");
});

QUnit.test("Test property ContextTagKeys.InternalApplicationType was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalApplicationType !== null, "ContextTagKeys.internalApplicationType == null");
    QUnit.ok(temp.internalApplicationType === "ai.internal.applicationType", "Issue with ContextTagKeys.internalApplicationType");
});

QUnit.test("Test property ContextTagKeys.InternalRequestSource was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalRequestSource !== null, "ContextTagKeys.internalRequestSource == null");
    QUnit.ok(temp.internalRequestSource === "ai.internal.requestSource", "Issue with ContextTagKeys.internalRequestSource");
});

QUnit.test("Test property ContextTagKeys.InternalFlowType was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalFlowType !== null, "ContextTagKeys.internalFlowType == null");
    QUnit.ok(temp.internalFlowType === "ai.internal.flowType", "Issue with ContextTagKeys.internalFlowType");
});

QUnit.test("Test property ContextTagKeys.InternalIsAudit was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalIsAudit !== null, "ContextTagKeys.internalIsAudit == null");
    QUnit.ok(temp.internalIsAudit === "ai.internal.isAudit", "Issue with ContextTagKeys.internalIsAudit");
});

QUnit.test("Test property ContextTagKeys.InternalTrackingSourceId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalTrackingSourceId !== null, "ContextTagKeys.internalTrackingSourceId == null");
    QUnit.ok(temp.internalTrackingSourceId === "ai.internal.trackingSourceId", "Issue with ContextTagKeys.internalTrackingSourceId");
});

QUnit.test("Test property ContextTagKeys.InternalTrackingType was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalTrackingType !== null, "ContextTagKeys.internalTrackingType == null");
    QUnit.ok(temp.internalTrackingType === "ai.internal.trackingType", "Issue with ContextTagKeys.internalTrackingType");
});

QUnit.test("Test property ContextTagKeys.InternalIsDiagnosticExample was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalIsDiagnosticExample !== null, "ContextTagKeys.internalIsDiagnosticExample == null");
    QUnit.ok(temp.internalIsDiagnosticExample === "ai.internal.isDiagnosticExample", "Issue with ContextTagKeys.internalIsDiagnosticExample");
});

