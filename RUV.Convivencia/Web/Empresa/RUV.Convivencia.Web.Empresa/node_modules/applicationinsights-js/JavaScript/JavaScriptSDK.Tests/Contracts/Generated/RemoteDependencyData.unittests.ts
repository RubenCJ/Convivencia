// THIS FILE WAS AUTOGENERATED
/// <reference path="../../External/qunit.d.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/DataPoint.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/MetricData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/RemoteDependencyData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/RequestData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/StackFrame.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/ExceptionDetails.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/ExceptionData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/MessageData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/EventData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/PageViewData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/PageViewPerfData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/AjaxCallData.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/AvailabilityData.ts" />
QUnit.test("Test property RemoteDependencyData.ver was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.ver !== null, "RemoteDependencyData.ver == null");
    QUnit.ok(temp.ver === 2, "Issue with RemoteDependencyData.ver");
});

QUnit.test("Test property RemoteDependencyData.name was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.name !== null, "RemoteDependencyData.name == null");
});

QUnit.test("Test property RemoteDependencyData.id was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.id !== null, "RemoteDependencyData.id == null");
});

QUnit.test("Test property RemoteDependencyData.resultCode was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.resultCode !== null, "RemoteDependencyData.resultCode == null");
});

QUnit.test("Test property RemoteDependencyData.kind was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.kind !== null, "RemoteDependencyData.kind == null");
    QUnit.ok(temp.kind === AI.DataPointType.Measurement, "Issue with RemoteDependencyData.kind");
});

QUnit.test("Test property RemoteDependencyData.value was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.value !== null, "RemoteDependencyData.value == null");
});

QUnit.test("Test property RemoteDependencyData.count was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.count !== null, "RemoteDependencyData.count == null");
});

QUnit.test("Test property RemoteDependencyData.min was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.min !== null, "RemoteDependencyData.min == null");
});

QUnit.test("Test property RemoteDependencyData.max was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.max !== null, "RemoteDependencyData.max == null");
});

QUnit.test("Test property RemoteDependencyData.stdDev was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.stdDev !== null, "RemoteDependencyData.stdDev == null");
});

QUnit.test("Test property RemoteDependencyData.dependencyKind was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.dependencyKind !== null, "RemoteDependencyData.dependencyKind == null");
    QUnit.ok(temp.dependencyKind === AI.DependencyKind.Other, "Issue with RemoteDependencyData.dependencyKind");
});

QUnit.test("Test property RemoteDependencyData.success was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.success !== null, "RemoteDependencyData.success == null");
    QUnit.ok(temp.success === true, "Issue with RemoteDependencyData.success");
});

QUnit.test("Test property RemoteDependencyData.async was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.async !== null, "RemoteDependencyData.async == null");
});

QUnit.test("Test property RemoteDependencyData.dependencySource was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.dependencySource !== null, "RemoteDependencyData.dependencySource == null");
    QUnit.ok(temp.dependencySource === AI.DependencySourceType.Undefined, "Issue with RemoteDependencyData.dependencySource");
});

QUnit.test("Test property RemoteDependencyData.commandName was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.commandName !== null, "RemoteDependencyData.commandName == null");
});

QUnit.test("Test property RemoteDependencyData.dependencyTypeName was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.dependencyTypeName !== null, "RemoteDependencyData.dependencyTypeName == null");
});

QUnit.test("Test property RemoteDependencyData.properties was created and default is set", function () {
    var temp = new AI.RemoteDependencyData();
    QUnit.ok(temp.properties !== null, "RemoteDependencyData.properties == null");
});

